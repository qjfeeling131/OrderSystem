//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web.Services.UserService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Services.UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        OrderManager.Model.DTO.OM_UserDetail Login(string userAccount, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        System.Threading.Tasks.Task<OrderManager.Model.DTO.OM_UserDetail> LoginAsync(string userAccount, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentUserLogs", ReplyAction="http://tempuri.org/IUserService/GetCurrentUserLogsResponse")]
        System.Collections.Generic.List<OrderManager.Model.DTO.OM_LogDataObject> GetCurrentUserLogs(string cipher, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentUserLogs", ReplyAction="http://tempuri.org/IUserService/GetCurrentUserLogsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.DTO.OM_LogDataObject>> GetCurrentUserLogsAsync(string cipher, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetPassword", ReplyAction="http://tempuri.org/IUserService/ResetPasswordResponse")]
        void ResetPassword(string cipher, string userGuid, string newPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/ResetPassword", ReplyAction="http://tempuri.org/IUserService/ResetPasswordResponse")]
        System.Threading.Tasks.Task ResetPasswordAsync(string cipher, string userGuid, string newPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePassword", ReplyAction="http://tempuri.org/IUserService/UpdatePasswordResponse")]
        void UpdatePassword(string cipher, string userGuid, string oldPwd, string newPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdatePassword", ReplyAction="http://tempuri.org/IUserService/UpdatePasswordResponse")]
        System.Threading.Tasks.Task UpdatePasswordAsync(string cipher, string userGuid, string oldPwd, string newPwd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentUserList", ReplyAction="http://tempuri.org/IUserService/GetCurrentUserListResponse")]
        System.Collections.Generic.List<OrderManager.Model.Models.OM_User> GetCurrentUserList(string cipher, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentUserList", ReplyAction="http://tempuri.org/IUserService/GetCurrentUserListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_User>> GetCurrentUserListAsync(string cipher, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        OrderManager.Model.Models.OM_User GetUser(string cipher, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        System.Threading.Tasks.Task<OrderManager.Model.Models.OM_User> GetUserAsync(string cipher, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SaveMessageBoard", ReplyAction="http://tempuri.org/IUserService/SaveMessageBoardResponse")]
        bool SaveMessageBoard(string cipher, OrderManager.Model.Models.OM_MessageBoard msgBoard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SaveMessageBoard", ReplyAction="http://tempuri.org/IUserService/SaveMessageBoardResponse")]
        System.Threading.Tasks.Task<bool> SaveMessageBoardAsync(string cipher, OrderManager.Model.Models.OM_MessageBoard msgBoard);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentUserMessageBoard", ReplyAction="http://tempuri.org/IUserService/GetCurrentUserMessageBoardResponse")]
        System.Collections.Generic.List<OrderManager.Model.Models.OM_MessageBoard> GetCurrentUserMessageBoard(string cipher, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentUserMessageBoard", ReplyAction="http://tempuri.org/IUserService/GetCurrentUserMessageBoardResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_MessageBoard>> GetCurrentUserMessageBoardAsync(string cipher, string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMessageBoardModel", ReplyAction="http://tempuri.org/IUserService/GetMessageBoardModelResponse")]
        OrderManager.Model.Models.OM_MessageBoard GetMessageBoardModel(string cipher, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetMessageBoardModel", ReplyAction="http://tempuri.org/IUserService/GetMessageBoardModelResponse")]
        System.Threading.Tasks.Task<OrderManager.Model.Models.OM_MessageBoard> GetMessageBoardModelAsync(string cipher, string guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetOrderList", ReplyAction="http://tempuri.org/IUserService/GetOrderListResponse")]
        System.Collections.Generic.List<OrderManager.Model.Models.OM_Order> GetOrderList(string cipher, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetOrderList", ReplyAction="http://tempuri.org/IUserService/GetOrderListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_Order>> GetOrderListAsync(string cipher, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SaveSalesOrder", ReplyAction="http://tempuri.org/IUserService/SaveSalesOrderResponse")]
        string SaveSalesOrder(string cipher, OrderManager.Model.DTO.OM_SalesOrderDataObject obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/SaveSalesOrder", ReplyAction="http://tempuri.org/IUserService/SaveSalesOrderResponse")]
        System.Threading.Tasks.Task<string> SaveSalesOrderAsync(string cipher, OrderManager.Model.DTO.OM_SalesOrderDataObject obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateSalesOrder", ReplyAction="http://tempuri.org/IUserService/UpdateSalesOrderResponse")]
        void UpdateSalesOrder(string cipher, OrderManager.Model.DTO.OM_SalesOrderDataObject obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateSalesOrder", ReplyAction="http://tempuri.org/IUserService/UpdateSalesOrderResponse")]
        System.Threading.Tasks.Task UpdateSalesOrderAsync(string cipher, OrderManager.Model.DTO.OM_SalesOrderDataObject obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetSalesOrderAndDetail", ReplyAction="http://tempuri.org/IUserService/GetSalesOrderAndDetailResponse")]
        OrderManager.Model.DTO.OM_SalesOrderDataObject GetSalesOrderAndDetail(string cipher, string salesOrder_Guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetSalesOrderAndDetail", ReplyAction="http://tempuri.org/IUserService/GetSalesOrderAndDetailResponse")]
        System.Threading.Tasks.Task<OrderManager.Model.DTO.OM_SalesOrderDataObject> GetSalesOrderAndDetailAsync(string cipher, string salesOrder_Guid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentSalesOrderList", ReplyAction="http://tempuri.org/IUserService/GetCurrentSalesOrderListResponse")]
        System.Collections.Generic.List<OrderManager.Model.Models.OM_Order> GetCurrentSalesOrderList(string cipher, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentSalesOrderList", ReplyAction="http://tempuri.org/IUserService/GetCurrentSalesOrderListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_Order>> GetCurrentSalesOrderListAsync(string cipher, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentProducePriceList", ReplyAction="http://tempuri.org/IUserService/GetCurrentProducePriceListResponse")]
        System.Collections.Generic.List<OrderManager.Model.Models.OM_ProductPrice> GetCurrentProducePriceList(string cipher, string itemCode, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentProducePriceList", ReplyAction="http://tempuri.org/IUserService/GetCurrentProducePriceListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_ProductPrice>> GetCurrentProducePriceListAsync(string cipher, string itemCode, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentUserByCardCode", ReplyAction="http://tempuri.org/IUserService/GetCurrentUserByCardCodeResponse")]
        System.Collections.Generic.List<OrderManager.Model.Models.OM_User> GetCurrentUserByCardCode(string cipher, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCurrentUserByCardCode", ReplyAction="http://tempuri.org/IUserService/GetCurrentUserByCardCodeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_User>> GetCurrentUserByCardCodeAsync(string cipher, string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetProductList", ReplyAction="http://tempuri.org/IUserService/GetProductListResponse")]
        System.Collections.Generic.List<OrderManager.Model.DTO.OM_ProductInfo> GetProductList(string cipher, string CardCode, string searchKey, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetProductList", ReplyAction="http://tempuri.org/IUserService/GetProductListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.DTO.OM_ProductInfo>> GetProductListAsync(string cipher, string CardCode, string searchKey, int pageIndex);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetProductListCount", ReplyAction="http://tempuri.org/IUserService/GetProductListCountResponse")]
        int GetProductListCount(string cipher, string CardCode, string searchKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetProductListCount", ReplyAction="http://tempuri.org/IUserService/GetProductListCountResponse")]
        System.Threading.Tasks.Task<int> GetProductListCountAsync(string cipher, string CardCode, string searchKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateSalesOrderStatusByCommit", ReplyAction="http://tempuri.org/IUserService/UpdateSalesOrderStatusByCommitResponse")]
        void UpdateSalesOrderStatusByCommit(string cipher, string orderGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateSalesOrderStatusByCommit", ReplyAction="http://tempuri.org/IUserService/UpdateSalesOrderStatusByCommitResponse")]
        System.Threading.Tasks.Task UpdateSalesOrderStatusByCommitAsync(string cipher, string orderGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateSalesOrderStatusByToSAP", ReplyAction="http://tempuri.org/IUserService/UpdateSalesOrderStatusByToSAPResponse")]
        OrderManager.Model.DTO.OM_B1InfomationDTO UpdateSalesOrderStatusByToSAP(string cipher, string orderGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateSalesOrderStatusByToSAP", ReplyAction="http://tempuri.org/IUserService/UpdateSalesOrderStatusByToSAPResponse")]
        System.Threading.Tasks.Task<OrderManager.Model.DTO.OM_B1InfomationDTO> UpdateSalesOrderStatusByToSAPAsync(string cipher, string orderGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCatalogList", ReplyAction="http://tempuri.org/IUserService/GetCatalogListResponse")]
        System.Collections.Generic.List<OrderManager.Model.Models.OM_Catalog> GetCatalogList(int catalogStatus, string parentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetCatalogList", ReplyAction="http://tempuri.org/IUserService/GetCatalogListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_Catalog>> GetCatalogListAsync(int catalogStatus, string parentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetProducts", ReplyAction="http://tempuri.org/IUserService/GetProductsResponse")]
        System.Collections.Generic.List<OrderManager.Model.Models.OM_Product> GetProducts(string parentId, string cardCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetProducts", ReplyAction="http://tempuri.org/IUserService/GetProductsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_Product>> GetProductsAsync(string parentId, string cardCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/FuzzySearchProduct", ReplyAction="http://tempuri.org/IUserService/FuzzySearchProductResponse")]
        System.Collections.Generic.List<OrderManager.Model.Models.OM_Product> FuzzySearchProduct(string key, string cardCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/FuzzySearchProduct", ReplyAction="http://tempuri.org/IUserService/FuzzySearchProductResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_Product>> FuzzySearchProductAsync(string key, string cardCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetStatementList", ReplyAction="http://tempuri.org/IUserService/GetStatementListResponse")]
        System.Collections.Generic.List<OrderManager.Model.Models.OM_Statement> GetStatementList(string cardCode, string cardName, string itemName, string userId, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetStatementList", ReplyAction="http://tempuri.org/IUserService/GetStatementListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_Statement>> GetStatementListAsync(string cardCode, string cardName, string itemName, string userId, System.DateTime startDate, System.DateTime endDate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : Web.Services.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<Web.Services.UserService.IUserService>, Web.Services.UserService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public OrderManager.Model.DTO.OM_UserDetail Login(string userAccount, string password) {
            return base.Channel.Login(userAccount, password);
        }
        
        public System.Threading.Tasks.Task<OrderManager.Model.DTO.OM_UserDetail> LoginAsync(string userAccount, string password) {
            return base.Channel.LoginAsync(userAccount, password);
        }
        
        public System.Collections.Generic.List<OrderManager.Model.DTO.OM_LogDataObject> GetCurrentUserLogs(string cipher, string userId) {
            return base.Channel.GetCurrentUserLogs(cipher, userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.DTO.OM_LogDataObject>> GetCurrentUserLogsAsync(string cipher, string userId) {
            return base.Channel.GetCurrentUserLogsAsync(cipher, userId);
        }
        
        public void ResetPassword(string cipher, string userGuid, string newPwd) {
            base.Channel.ResetPassword(cipher, userGuid, newPwd);
        }
        
        public System.Threading.Tasks.Task ResetPasswordAsync(string cipher, string userGuid, string newPwd) {
            return base.Channel.ResetPasswordAsync(cipher, userGuid, newPwd);
        }
        
        public void UpdatePassword(string cipher, string userGuid, string oldPwd, string newPwd) {
            base.Channel.UpdatePassword(cipher, userGuid, oldPwd, newPwd);
        }
        
        public System.Threading.Tasks.Task UpdatePasswordAsync(string cipher, string userGuid, string oldPwd, string newPwd) {
            return base.Channel.UpdatePasswordAsync(cipher, userGuid, oldPwd, newPwd);
        }
        
        public System.Collections.Generic.List<OrderManager.Model.Models.OM_User> GetCurrentUserList(string cipher, string userGuid) {
            return base.Channel.GetCurrentUserList(cipher, userGuid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_User>> GetCurrentUserListAsync(string cipher, string userGuid) {
            return base.Channel.GetCurrentUserListAsync(cipher, userGuid);
        }
        
        public OrderManager.Model.Models.OM_User GetUser(string cipher, string userGuid) {
            return base.Channel.GetUser(cipher, userGuid);
        }
        
        public System.Threading.Tasks.Task<OrderManager.Model.Models.OM_User> GetUserAsync(string cipher, string userGuid) {
            return base.Channel.GetUserAsync(cipher, userGuid);
        }
        
        public bool SaveMessageBoard(string cipher, OrderManager.Model.Models.OM_MessageBoard msgBoard) {
            return base.Channel.SaveMessageBoard(cipher, msgBoard);
        }
        
        public System.Threading.Tasks.Task<bool> SaveMessageBoardAsync(string cipher, OrderManager.Model.Models.OM_MessageBoard msgBoard) {
            return base.Channel.SaveMessageBoardAsync(cipher, msgBoard);
        }
        
        public System.Collections.Generic.List<OrderManager.Model.Models.OM_MessageBoard> GetCurrentUserMessageBoard(string cipher, string userId) {
            return base.Channel.GetCurrentUserMessageBoard(cipher, userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_MessageBoard>> GetCurrentUserMessageBoardAsync(string cipher, string userId) {
            return base.Channel.GetCurrentUserMessageBoardAsync(cipher, userId);
        }
        
        public OrderManager.Model.Models.OM_MessageBoard GetMessageBoardModel(string cipher, string guid) {
            return base.Channel.GetMessageBoardModel(cipher, guid);
        }
        
        public System.Threading.Tasks.Task<OrderManager.Model.Models.OM_MessageBoard> GetMessageBoardModelAsync(string cipher, string guid) {
            return base.Channel.GetMessageBoardModelAsync(cipher, guid);
        }
        
        public System.Collections.Generic.List<OrderManager.Model.Models.OM_Order> GetOrderList(string cipher, string userGuid) {
            return base.Channel.GetOrderList(cipher, userGuid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_Order>> GetOrderListAsync(string cipher, string userGuid) {
            return base.Channel.GetOrderListAsync(cipher, userGuid);
        }
        
        public string SaveSalesOrder(string cipher, OrderManager.Model.DTO.OM_SalesOrderDataObject obj) {
            return base.Channel.SaveSalesOrder(cipher, obj);
        }
        
        public System.Threading.Tasks.Task<string> SaveSalesOrderAsync(string cipher, OrderManager.Model.DTO.OM_SalesOrderDataObject obj) {
            return base.Channel.SaveSalesOrderAsync(cipher, obj);
        }
        
        public void UpdateSalesOrder(string cipher, OrderManager.Model.DTO.OM_SalesOrderDataObject obj) {
            base.Channel.UpdateSalesOrder(cipher, obj);
        }
        
        public System.Threading.Tasks.Task UpdateSalesOrderAsync(string cipher, OrderManager.Model.DTO.OM_SalesOrderDataObject obj) {
            return base.Channel.UpdateSalesOrderAsync(cipher, obj);
        }
        
        public OrderManager.Model.DTO.OM_SalesOrderDataObject GetSalesOrderAndDetail(string cipher, string salesOrder_Guid) {
            return base.Channel.GetSalesOrderAndDetail(cipher, salesOrder_Guid);
        }
        
        public System.Threading.Tasks.Task<OrderManager.Model.DTO.OM_SalesOrderDataObject> GetSalesOrderAndDetailAsync(string cipher, string salesOrder_Guid) {
            return base.Channel.GetSalesOrderAndDetailAsync(cipher, salesOrder_Guid);
        }
        
        public System.Collections.Generic.List<OrderManager.Model.Models.OM_Order> GetCurrentSalesOrderList(string cipher, string userGuid) {
            return base.Channel.GetCurrentSalesOrderList(cipher, userGuid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_Order>> GetCurrentSalesOrderListAsync(string cipher, string userGuid) {
            return base.Channel.GetCurrentSalesOrderListAsync(cipher, userGuid);
        }
        
        public System.Collections.Generic.List<OrderManager.Model.Models.OM_ProductPrice> GetCurrentProducePriceList(string cipher, string itemCode, string userGuid) {
            return base.Channel.GetCurrentProducePriceList(cipher, itemCode, userGuid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_ProductPrice>> GetCurrentProducePriceListAsync(string cipher, string itemCode, string userGuid) {
            return base.Channel.GetCurrentProducePriceListAsync(cipher, itemCode, userGuid);
        }
        
        public System.Collections.Generic.List<OrderManager.Model.Models.OM_User> GetCurrentUserByCardCode(string cipher, string userGuid) {
            return base.Channel.GetCurrentUserByCardCode(cipher, userGuid);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_User>> GetCurrentUserByCardCodeAsync(string cipher, string userGuid) {
            return base.Channel.GetCurrentUserByCardCodeAsync(cipher, userGuid);
        }
        
        public System.Collections.Generic.List<OrderManager.Model.DTO.OM_ProductInfo> GetProductList(string cipher, string CardCode, string searchKey, int pageIndex) {
            return base.Channel.GetProductList(cipher, CardCode, searchKey, pageIndex);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.DTO.OM_ProductInfo>> GetProductListAsync(string cipher, string CardCode, string searchKey, int pageIndex) {
            return base.Channel.GetProductListAsync(cipher, CardCode, searchKey, pageIndex);
        }
        
        public int GetProductListCount(string cipher, string CardCode, string searchKey) {
            return base.Channel.GetProductListCount(cipher, CardCode, searchKey);
        }
        
        public System.Threading.Tasks.Task<int> GetProductListCountAsync(string cipher, string CardCode, string searchKey) {
            return base.Channel.GetProductListCountAsync(cipher, CardCode, searchKey);
        }
        
        public void UpdateSalesOrderStatusByCommit(string cipher, string orderGuid) {
            base.Channel.UpdateSalesOrderStatusByCommit(cipher, orderGuid);
        }
        
        public System.Threading.Tasks.Task UpdateSalesOrderStatusByCommitAsync(string cipher, string orderGuid) {
            return base.Channel.UpdateSalesOrderStatusByCommitAsync(cipher, orderGuid);
        }
        
        public OrderManager.Model.DTO.OM_B1InfomationDTO UpdateSalesOrderStatusByToSAP(string cipher, string orderGuid) {
            return base.Channel.UpdateSalesOrderStatusByToSAP(cipher, orderGuid);
        }
        
        public System.Threading.Tasks.Task<OrderManager.Model.DTO.OM_B1InfomationDTO> UpdateSalesOrderStatusByToSAPAsync(string cipher, string orderGuid) {
            return base.Channel.UpdateSalesOrderStatusByToSAPAsync(cipher, orderGuid);
        }
        
        public System.Collections.Generic.List<OrderManager.Model.Models.OM_Catalog> GetCatalogList(int catalogStatus, string parentId) {
            return base.Channel.GetCatalogList(catalogStatus, parentId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_Catalog>> GetCatalogListAsync(int catalogStatus, string parentId) {
            return base.Channel.GetCatalogListAsync(catalogStatus, parentId);
        }
        
        public System.Collections.Generic.List<OrderManager.Model.Models.OM_Product> GetProducts(string parentId, string cardCode) {
            return base.Channel.GetProducts(parentId, cardCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_Product>> GetProductsAsync(string parentId, string cardCode) {
            return base.Channel.GetProductsAsync(parentId, cardCode);
        }
        
        public System.Collections.Generic.List<OrderManager.Model.Models.OM_Product> FuzzySearchProduct(string key, string cardCode) {
            return base.Channel.FuzzySearchProduct(key, cardCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_Product>> FuzzySearchProductAsync(string key, string cardCode) {
            return base.Channel.FuzzySearchProductAsync(key, cardCode);
        }
        
        public System.Collections.Generic.List<OrderManager.Model.Models.OM_Statement> GetStatementList(string cardCode, string cardName, string itemName, string userId, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetStatementList(cardCode, cardName, itemName, userId, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<OrderManager.Model.Models.OM_Statement>> GetStatementListAsync(string cardCode, string cardName, string itemName, string userId, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetStatementListAsync(cardCode, cardName, itemName, userId, startDate, endDate);
        }
    }
}
